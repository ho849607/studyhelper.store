<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>CKEditor + 로컬 추천어 데모</title>
  <script src="https://cdn.ckeditor.com/ckeditor5/41.0.0/classic/ckeditor.js"></script>
  <style>
    body {
      font-family: sans-serif;
      margin: 20px;
      background: #f4f4f4;
      color: #333;
    }
    #editor {
      border: 1px solid #ccc;
      min-height: 200px;
      padding: 10px;
      background: #fff;
    }
    .suggestion-box {
      position: absolute;
      background: #fff;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
      z-index: 9999;
      display: none;
      padding: 5px;
    }
    .suggestion-box div {
      padding: 5px 10px;
      cursor: pointer;
    }
    .suggestion-box div:hover {
      background: #eee;
    }
  </style>
</head>
<body>
  <h1>CKEditor - 로컬 추천어 데모</h1>
  <p>마지막 글자가 "인"이면 로컬 추천어를 보여주고, 클릭 시 간단한 안내만 띄웁니다.</p>

  <!-- 에디터 영역 -->
  <div id="editor">여기에 문서를 작성하세요...</div>
  <!-- 추천어 박스 -->
  <div id="suggestionBox" class="suggestion-box"></div>

  <script>
    let editorInstance;
    const suggestionBox = document.getElementById('suggestionBox');

    // "인"을 마지막 글자로 입력하면 표시할 로컬 추천어
    const LOCAL_SUGGESTIONS = ["인공지능", "인도", "인터넷", "인프라", "인쇄물"];

    // CKEditor 초기화
    ClassicEditor
      .create(document.querySelector('#editor'))
      .then(editor => {
        editorInstance = editor;
        console.log("CKEditor 초기화 완료!");
        // 내용 변경 시 → handleEditorChange
        editor.model.document.on('change:data', handleEditorChange);
      })
      .catch(err => {
        console.error("CKEditor 초기화 실패:", err);
      });

    function handleEditorChange() {
      if (!editorInstance) return;
      const html = editorInstance.getData();
      // plain text 추출
      const div = document.createElement('div');
      div.innerHTML = html;
      const text = div.innerText || div.textContent || "";

      const words = text.trim().split(/\s+/);
      if (!words.length) {
        hideSuggestions();
        return;
      }
      const lastWord = words[words.length - 1];
      // console.log("마지막 단어:", lastWord);

      // 마지막 글자가 "인"인가?
      if (lastWord.endsWith("인")) {
        showLocalSuggestions();
      } else {
        hideSuggestions();
      }
    }

    function showLocalSuggestions() {
      // suggestionBox에 LOCAL_SUGGESTIONS 표시
      suggestionBox.innerHTML = '';
      LOCAL_SUGGESTIONS.forEach(item => {
        const div = document.createElement('div');
        div.textContent = item;
        div.addEventListener('click', () => onSuggestionClick(item));
        suggestionBox.appendChild(div);
      });
      // 임의 위치
      suggestionBox.style.left = '300px';
      suggestionBox.style.top = '200px';
      suggestionBox.style.display = 'block';
    }

    function hideSuggestions() {
      suggestionBox.style.display = 'none';
    }

    function onSuggestionClick(word) {
      hideSuggestions();
      // 서버 없이 간단한 알림만 띄움
      const ok = confirm(`"${word}" 주제 AI 초안을 작성할까요?\n(서버 호출은 생략된 로컬 데모)`);
      if (!ok) return;
      // 여기서는 초안 삽입 로직만 데모로
      const currentHtml = editorInstance.getData();
      const newHtml = currentHtml + `<p style="color:blue;">[AI 초안] (데모) ${word} 관련 내용이 추가되었습니다.</p>`;
      editorInstance.setData(newHtml);
      alert(`"${word}" 주제에 대한 내용이 에디터에 삽입되었습니다.`);
    }
  </script>
</body>
</html>
